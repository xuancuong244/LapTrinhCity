package com.polyPro.ui;

import com.polyPro.dao.KhoaHocDAO;
import com.polyPro.dao.ThongKeDAO;
import com.polyPro.model.KhoaHoc;
import com.polyPro.utils.XDialog;
import com.polyPro.utils.XShare;
import java.awt.Font;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author duong, cuong, vinh
 */
public class ThongKeJFrame extends javax.swing.JFrame {

    ThongKeDAO dao = new ThongKeDAO();
    KhoaHocDAO khdao = new KhoaHocDAO();

    public ThongKeJFrame() {
        initComponents();
        init();
    }

    public ThongKeJFrame(int tabIndex) {
        initComponents();
        init();
        tabs.setSelectedIndex(tabIndex);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tabs = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNguoiHoc = new javax.swing.JTable();
        btnNguoiHoc = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBangDiem = new javax.swing.JTable();
        cboKhoaHoc = new javax.swing.JComboBox<>();
        btnBangDiem = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblTongHop = new javax.swing.JTable();
        btnTongHopDiem = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblDoanhThu = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        cboNam = new javax.swing.JComboBox<>();
        btnDoanhThu = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(223, 238, 234));
        jPanel1.setPreferredSize(new java.awt.Dimension(900, 500));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabs.setBackground(new java.awt.Color(223, 238, 234));
        tabs.setFocusable(false);
        tabs.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(223, 238, 234));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblNguoiHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "YEARS", "NUMBER OF LEARNERS", "REGISTER FIRSTLY", "REGISTER LASTLY"
            }
        ));
        jScrollPane1.setViewportView(tblNguoiHoc);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 16, 830, 440));

        btnNguoiHoc.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnNguoiHoc.setText("Export Learner");
        btnNguoiHoc.setFocusable(false);
        btnNguoiHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNguoiHocActionPerformed(evt);
            }
        });
        jPanel2.add(btnNguoiHoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 480, 213, 44));

        tabs.addTab("LEARNER", jPanel2);

        jPanel3.setBackground(new java.awt.Color(223, 238, 234));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblBangDiem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblBangDiem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "LEARNER ID", "FULLNAME", "POINT", "CLASSIFICATION"
            }
        ));
        jScrollPane2.setViewportView(tblBangDiem);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 56, 830, 400));

        cboKhoaHoc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboKhoaHoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboKhoaHoc.setFocusable(false);
        cboKhoaHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhoaHocActionPerformed(evt);
            }
        });
        jPanel3.add(cboKhoaHoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 6, 720, 44));

        btnBangDiem.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnBangDiem.setText("Export Transcript");
        btnBangDiem.setFocusable(false);
        btnBangDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBangDiemActionPerformed(evt);
            }
        });
        jPanel3.add(btnBangDiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 480, 213, 44));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("COURSE:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 6, 90, 44));

        tabs.addTab("TRANSCRIPT", jPanel3);

        jPanel4.setBackground(new java.awt.Color(223, 238, 234));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblTongHop.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblTongHop.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "THEMATIC", "NUMBER OF STUDENTS", "GRADUATION", "MARK OF MAJORS", "AVERAGE MARKS"
            }
        ));
        jScrollPane3.setViewportView(tblTongHop);

        jPanel4.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 6, 830, 450));

        btnTongHopDiem.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnTongHopDiem.setText("Export Mark of Thematic");
        btnTongHopDiem.setFocusable(false);
        btnTongHopDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTongHopDiemActionPerformed(evt);
            }
        });
        jPanel4.add(btnTongHopDiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(583, 480, 260, 44));

        tabs.addTab("MARK OF THEMATIC", jPanel4);

        jPanel5.setBackground(new java.awt.Color(223, 238, 234));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblDoanhThu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblDoanhThu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "THEMATIC", "NUMBER OF COURSES", "AMOUNT OF STUDENTS", "REVENUE", "HIGHEST TUITION FEES", "LOWEST TUITION FEES", "AVERAGE TUITION FEES"
            }
        ));
        jScrollPane4.setViewportView(tblDoanhThu);

        jPanel5.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 820, 400));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("YEAR:");
        jPanel5.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 6, -1, 44));

        cboNam.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboNam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboNam.setFocusable(false);
        cboNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNamActionPerformed(evt);
            }
        });
        jPanel5.add(cboNam, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 6, 770, 44));

        btnDoanhThu.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnDoanhThu.setText("Export Revenue");
        btnDoanhThu.setFocusable(false);
        btnDoanhThu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoanhThuActionPerformed(evt);
            }
        });
        jPanel5.add(btnDoanhThu, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 480, 213, 44));

        tabs.addTab("REVENUE", jPanel5);

        jPanel1.add(tabs, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 57, 860, 570));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SATISTICAL SYNTHESIS");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 890, 45));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        fillComboBoxKhoaHoc();
        fillTableBangDiem();
        fillTableNguoiHoc();
        fillTableKhoaHoc();
        fillComboBoxNam();
        fillTableDoanhThu();

    }//GEN-LAST:event_formWindowOpened

    private void cboKhoaHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhoaHocActionPerformed
        if (cboKhoaHoc.getSelectedIndex() == -1) {
            return;
        }
        fillTableBangDiem();
    }//GEN-LAST:event_cboKhoaHocActionPerformed

    private void cboNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNamActionPerformed
        if (cboNam.getSelectedIndex() == -1) {
            return;
        }
        fillTableDoanhThu();
    }//GEN-LAST:event_cboNamActionPerformed

    private void btnNguoiHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNguoiHocActionPerformed
        printLuongNguoiHoc();
    }//GEN-LAST:event_btnNguoiHocActionPerformed

    private void btnBangDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBangDiemActionPerformed
        printBangDiem();
    }//GEN-LAST:event_btnBangDiemActionPerformed

    private void btnTongHopDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTongHopDiemActionPerformed
        printDiemChuyenDe();
    }//GEN-LAST:event_btnTongHopDiemActionPerformed

    private void btnDoanhThuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoanhThuActionPerformed
        printDoanhThu();
    }//GEN-LAST:event_btnDoanhThuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongKeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongKeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongKeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongKeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThongKeJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBangDiem;
    private javax.swing.JButton btnDoanhThu;
    private javax.swing.JButton btnNguoiHoc;
    private javax.swing.JButton btnTongHopDiem;
    private javax.swing.JComboBox<String> cboKhoaHoc;
    private javax.swing.JComboBox<String> cboNam;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblBangDiem;
    private javax.swing.JTable tblDoanhThu;
    private javax.swing.JTable tblNguoiHoc;
    private javax.swing.JTable tblTongHop;
    // End of variables declaration//GEN-END:variables

    private void init() {
        setIconImage(XShare.APP_ICON);
        setLocationRelativeTo(null);
        tblNguoiHoc.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        tblBangDiem.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        tblTongHop.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        tblDoanhThu.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
    }

    void fillComboBoxKhoaHoc() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboKhoaHoc.getModel();
        model.removeAllElements();

        List<KhoaHoc> list = khdao.select();
        for (KhoaHoc kh : list) {
            model.addElement(kh);
        }
        cboKhoaHoc.setSelectedIndex(0);
    }

    void fillComboBoxNam() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboNam.getModel();
        model.removeAllElements();
        List<KhoaHoc> list = khdao.select();
        for (KhoaHoc kh : list) {
            int nam = kh.getNgayKG().getYear() + 1900;
            if (model.getIndexOf(nam) < 0) {
                model.addElement(nam);
            }
        }
        cboNam.setSelectedIndex(0);
    }

    void fillTableBangDiem() {
        DefaultTableModel model = (DefaultTableModel) tblBangDiem.getModel();
        model.setRowCount(0);

        KhoaHoc kh = (KhoaHoc) cboKhoaHoc.getSelectedItem();
        List<Object[]> list = dao.getBangDiem(kh.getMaKH());
        for (Object[] row : list) {
            model.addRow(row);
        }
    }

    void fillTableNguoiHoc() {
        DefaultTableModel model = (DefaultTableModel) tblNguoiHoc.getModel();
        model.setRowCount(0);
        List<Object[]> list = dao.getNguoiHoc();
        for (Object[] row : list) {
            model.addRow(row);
        }
    }

    void fillTableKhoaHoc() {
        DefaultTableModel model = (DefaultTableModel) tblTongHop.getModel();
        model.setRowCount(0);
        List<Object[]> list = dao.getDiemTheoChuyenDe();
        for (Object[] row : list) {
            model.addRow(row);
        }
    }

    public void selectTab(int index) {
        tabs.setSelectedIndex(index);
    }

    void fillTableDoanhThu() {
        DefaultTableModel model = (DefaultTableModel) tblDoanhThu.getModel();
        model.setRowCount(0);
        int nam = Integer.parseInt(cboNam.getSelectedItem().toString());
        List<Object[]> list = dao.getDoanhThu(nam);
        for (Object[] row : list) {
            model.addRow(row);
        }
    }

    XSSFWorkbook workbook = new XSSFWorkbook();

    private void printBangDiem() {
        try {
            XSSFSheet sheet = workbook.createSheet("Academic Transcript");

            KhoaHoc kh = (KhoaHoc) cboKhoaHoc.getSelectedItem();
            List<Object[]> list = dao.getBangDiem(kh.getMaKH());

            int rownum = 0;
            Cell cell;
            Row row;
            // 

            row = sheet.createRow(rownum);

            //MaNH
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("ID STUDENT");

            //Họ Tên
            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("FULL NAME");

            //Điểm 
            cell = row.createCell(2, CellType.NUMERIC);
            cell.setCellValue("POINT");

            //Xếp loại
            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("CLASSIFICATION");

            //DATA 
            for (int i = 0; i < list.size(); i++) {
                rownum++;
                row = sheet.createRow(rownum);

                //ID Student
                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue((String) tblBangDiem.getValueAt(i, 0));

                //FULL NAME
                cell = row.createCell(1, CellType.STRING);
                cell.setCellValue((String) tblBangDiem.getValueAt(i, 1));

                //POINT
                cell = row.createCell(2, CellType.NUMERIC);
                cell.setCellValue((Double) tblBangDiem.getValueAt(i, 2));

                //CLASSIFICATION
                cell = row.createCell(3, CellType.STRING);
                cell.setCellValue((String) tblBangDiem.getValueAt(i, 3));

            }
            //PRINT
            chooseDirectoryToSave(workbook);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error Open File");
        }

    }

    private void printLuongNguoiHoc() {
        try {
            XSSFSheet sheet = workbook.createSheet("Amount of learners");

            List<Object[]> list = dao.getNguoiHoc();

            int rownum = 0;
            Cell cell;
            Row row;
            // 

            row = sheet.createRow(rownum);

            //NĂM
            cell = row.createCell(0, CellType.NUMERIC);
            cell.setCellValue("YEAR");

            //LƯỢNG NGƯỜI HỌC
            cell = row.createCell(1, CellType.NUMERIC);
            cell.setCellValue("NUMBER OF LEARNERS");

            //ĐK SỚM NHẤT
            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue("REGISTER FIRSTLY");

            //ĐK MUỘN NHẤT
            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("REGISTER LASTLY");

            //DATA 
            for (int i = 0; i < list.size(); i++) {
                rownum++;
                row = sheet.createRow(rownum);

                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue((Integer) tblNguoiHoc.getValueAt(i, 0));

                cell = row.createCell(1, CellType.STRING);
                cell.setCellValue((Integer) tblNguoiHoc.getValueAt(i, 1));
//            
                cell = row.createCell(2, CellType.NUMERIC);
                cell.setCellValue((Date) tblNguoiHoc.getValueAt(i, 2));

                cell = row.createCell(3, CellType.STRING);
                cell.setCellValue((Date) tblNguoiHoc.getValueAt(i, 3));
//            
            }
            //PRINT
            chooseDirectoryToSave(workbook);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error Open File");
        }
    }

    private void printDiemChuyenDe() {
        try {
            XSSFSheet sheet = workbook.createSheet("Mark of Thematic");

            List<Object[]> list = dao.getDiemTheoChuyenDe();

            int rownum = 0;
            Cell cell;
            Row row;
            // 

            row = sheet.createRow(rownum);

            //CHUYÊN ĐỀ
            cell = row.createCell(0, CellType.NUMERIC);
            cell.setCellValue("THEMATIC");

            //SỐ LƯỢNG HV
            cell = row.createCell(1, CellType.NUMERIC);
            cell.setCellValue("NUMBER OF STUDENTS");

            //ĐIỂM TỐT NGHIỆP
            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue("GRADUATION");

            //ĐIỂM CHUYÊN NGÀNH
            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("MARK OF MAJORS");

            //ĐIỂM TB
            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("AVERAGE MARKS");

            //DATA  
            for (int i = 0; i < list.size(); i++) {
                rownum++;
                row = sheet.createRow(rownum);

                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue((String) tblTongHop.getValueAt(i, 0));

                cell = row.createCell(1, CellType.NUMERIC);
                cell.setCellValue((Integer) tblTongHop.getValueAt(i, 1));
//            
                cell = row.createCell(2, CellType.NUMERIC);
                cell.setCellValue((Double) tblTongHop.getValueAt(i, 2));

                cell = row.createCell(3, CellType.NUMERIC);
                cell.setCellValue((Double) tblTongHop.getValueAt(i, 3));

                cell = row.createCell(4, CellType.NUMERIC);
                cell.setCellValue((Double) tblTongHop.getValueAt(i, 4));
//            
            }
            //PRINT
            chooseDirectoryToSave(workbook);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error Open File");
        }
    }

    private void printDoanhThu() {
        try {
            XSSFSheet sheet = workbook.createSheet("REVENUE");

            int nam = (Integer) cboNam.getSelectedItem();
            List<Object[]> list = dao.getDoanhThu(nam);

            int rownum = 0;
            Cell cell;
            Row row;
            // 

            row = sheet.createRow(rownum);

            //CHUYÊN ĐỀ
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("THEMATIC");

            //SỐ LƯỢNG HV
            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("NUMBER OF COURSES");

            //ĐIỂM TỐT NGHIỆP
            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue("AMOUNT OF STUDENTS");

            //ĐIỂM CHUYÊN NGÀNH
            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("REVENUE");

            //ĐIỂM CHUYÊN NGÀNH
            cell = row.createCell(4, CellType.STRING);
            cell.setCellValue("HIGHEST TUITION FEES");

            //ĐIỂM TB
            cell = row.createCell(5, CellType.STRING);
            cell.setCellValue("LOWEST TUITION FEES");

            //ĐIỂM TB
            cell = row.createCell(6, CellType.STRING);
            cell.setCellValue("AVERAGE TUITION FEES");

            //DATA  
            for (int i = 0; i < list.size(); i++) {
                rownum++;
                row = sheet.createRow(rownum);

                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue((String) tblDoanhThu.getValueAt(i, 0));

                cell = row.createCell(1, CellType.NUMERIC);
                cell.setCellValue((Integer) tblDoanhThu.getValueAt(i, 1));
//            
                cell = row.createCell(2, CellType.NUMERIC);
                cell.setCellValue((Integer) tblDoanhThu.getValueAt(i, 2));

                cell = row.createCell(3, CellType.NUMERIC);
                cell.setCellValue((Double) tblDoanhThu.getValueAt(i, 3));

                cell = row.createCell(4, CellType.NUMERIC);
                cell.setCellValue((Double) tblDoanhThu.getValueAt(i, 4));

                cell = row.createCell(5, CellType.NUMERIC);
                cell.setCellValue((Double) tblDoanhThu.getValueAt(i, 5));

                cell = row.createCell(6, CellType.NUMERIC);
                cell.setCellValue((Double) tblDoanhThu.getValueAt(i, 6));

//            
            }
            //PRINT
            chooseDirectoryToSave(workbook);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error Open File");
        }
    }

    private void chooseDirectoryToSave(Workbook workbook) {
        JFileChooser choose = new JFileChooser();
        int x = choose.showSaveDialog(null);
        if (x == JFileChooser.APPROVE_OPTION) {
            try {
                String file = choose.getSelectedFile().getAbsolutePath().toString();
                FileOutputStream outFile = new FileOutputStream(file);
                workbook.write(outFile);
                XDialog.alert(this, "Print file successful!!");
            } catch (IOException ex) {
                Logger.getLogger(ThongKeJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
